#set ($package = ${data.config.mainPackage})
package ${package}.util.ui.converters; 

import javax.faces.application.FacesMessage;
import javax.faces.component.UIComponent;
import javax.faces.context.FacesContext;
import javax.faces.convert.ConverterException;

import org.jboss.seam.annotations.Name;
import org.jboss.seam.annotations.faces.Converter;
import org.jboss.seam.annotations.intercept.BypassInterceptors;

@Converter
@Name("CPFConverter")
@BypassInterceptors
public class CPFConverter implements javax.faces.convert.Converter {

	public Object getAsObject(FacesContext context, UIComponent component, String value) throws ConverterException {
		if (value != null && !value.equals("")) {
			String cpf = value.replaceAll("\\.", "").replaceAll("\\-", "");

			try {
				// Testa se somente existem numeros.
				Long.valueOf(cpf);
				return cpf;
			} catch (NumberFormatException e) {
				FacesMessage message = new FacesMessage(FacesMessage.SEVERITY_ERROR,"Erro de conversão","Não foi possí­vel converter o valor para um cpf");
				throw new ConverterException(message);
			}
		}
		else if ((value==null) || (value.equals(""))) {  
			return null;  
		}

		return value;
	}

	public String getAsString(FacesContext context, UIComponent component, Object value) throws ConverterException {
		String cpf = (value == null ? null : value.toString());

		if (cpf != null && !cpf.equals("")) {
			cpf = cpf.substring(0, 3) + "." + cpf.substring(3, 6) + "."
					+ cpf.substring(6, 9) + "-" + cpf.substring(9);
		}else if (value==null) {  
			return "";  
		}

		return cpf;
	}

}
